{#
 # This file is part of the Parti de Gauche elections data project.
 #
 # The Parti de Gauche elections data project is free software: you can
 # redistribute it and/or modify it under the terms of the GNU Affero General
 # Public License as published by the Free Software Foundation, either
 # version 3 of the License, or (at your option) any later version.
 #
 # The Parti de Gauche elections data project is distributed in the hope
 # that it will be useful, but WITHOUT ANY WARRANTY; without even the
 # implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 # See the GNU Affero General Public License for more details.
 #
 # You should have received a copy of the GNU Affero General Public License
 # along with the Parti de Gauche elections data project.
 # If not, see <http://www.gnu.org/licenses/>.
 #}

{% extends 'PartiDeGaucheElectionsBundle::layout.html.twig' %}

{% form_theme form 'PartiDeGaucheElectionsBundle:Form:fields.html.twig' %}

{% macro pourcentage(valeur, total) %}{% spaceless %}
  {{ valeur and total ? ((valeur/total) * 100)|number_format(2) ~ '%' : 'NA' }}
{% endspaceless %}{% endmacro %}

{% macro candidat(candidats) %}{% spaceless %}
  {% for candidat in candidats %}
    {{ candidat.nom }}
    {% if not loop.last %}<br/>{% endif %}
  {% endfor %}
{% endspaceless %}{% endmacro %}

{% macro diffVoix(resultats, index, nuance, ref) %}{% spaceless %}
  {% import _self as format %}
  {% set currentResultat = 0 %}
  {% set prevResultat = 0 %}
  {% for echeance in resultats|slice(index-2, 1) %}
    {% set prevResultat = echeance[nuance].score.toVoix %}
  {% endfor %}
  {% for echeance in resultats|slice(index-1, 1) %}
    {% set currentResultat = echeance[nuance].score.toVoix %}
  {% endfor %}

  {% if ref is defined and ref is not null %}
    {% set prevResultat = ref[nuance].score.toVoix %}
  {% endif %}

  {% if prevResultat and currentResultat %}
    {% set diff = currentResultat - prevResultat %}
    {% set class = (diff >= 0 ? 'success' : 'danger') %}
    /
    <span class="text-{{class}}">
      {{ (diff >= 0 ? '+': '') }}{{ diff|number_format(0, ',', ' ')}}
      ({{ (diff >= 0 ? '+': '') ~ format.pourcentage(diff, prevResultat) }})
    </span>
  {% endif %}
{% endspaceless %}{% endmacro %}

{% macro diffPourcentage(resultats, index, nuance, ref) %}{% spaceless %}
  {% import _self as format %}
  {% set currentResultat = 0 %}
  {% set prevResultat = 0 %}
  {% for echeance in resultats|slice(index-2, 1) %}
    {% set prevResultat = echeance.exprimes ? (echeance[nuance].score.toVoix/echeance.exprimes) * 100 : false %}
  {% endfor %}
  {% for echeance in resultats|slice(index-1, 1) %}
    {% set currentResultat = echeance.exprimes ? (echeance[nuance].score.toVoix/echeance.exprimes) * 100 : false %}
  {% endfor %}

  {% if ref is defined and ref is not null %}
    {% set prevResultat = ref.exprimes ? (ref[nuance].score.toVoix / ref.exprimes) * 100 : false %}
  {% endif %}

  {% if prevResultat and currentResultat %}
    {% set diff = currentResultat - prevResultat %}
    {% set class = (diff >= 0 ? 'success' : 'danger') %}
    /
    <span class="text-{{class}}">
      {{ (diff >= 0 ? '+': '') }}
      {{ diff|number_format(2, ',', ' ')}} %
    </span>
  {% endif %}
{% endspaceless %}{% endmacro %}

{% import _self as format %}

{% block content %}
  <div class="row">
    <div class="col-md-3">
      <h4>Résultats - {{ territoire }}</h4>
    </div>
    <div class="col-md-9 hidden-print">
      {{ form_start(form) }}
        <div class="row">
          {% for element in form.echeances %}
            <div class="col-md-6">
              {{ form_widget(element) }}
              {{ form_label(element) }}
            </div>
          {% endfor %}
          <div class="col-md-6">
            {{ form_row(form.comparaison, { 'attr': {'class': 'form-control'} })}}
          </div>
        </div>
        <div class="row">
          <div class="col-md-12">
            {{ form_row(form.voir, { 'attr': { 'class': 'form-control' }}) }}
          </div>
        </div>
      {{ form_end(form) }}
    </div>
  </div>
  <div class="row">
    <div clas="col-md-12">
      <div class="table-responsive">
        <table class="table table-condensed table-hover">
          <tr>
            <th></th>
            {% for echeance, resultat in resultats %}
              <th>
                {{ echeance }}
                {% if is_granted('ROLE_ADMIN') and resultat.election is not null %}
                  <br/>
                  {% set editpath = app.request.uri ~ '/edit/' ~ echeance|slugify %}
                  <a class="btn btn-xs btn-default" href="{{ editpath }}">
                    Éditer
                  </a>
                {% endif %}
              </th>
            {% endfor %}
          </tr>
          <tr>
            <th>Inscrits</th>
            {% for echeance in resultats %}
              <td>
                {{ echeance.inscrits|number_format(0, ',', ' ')|default('NA') }}
              </td>
            {% endfor %}
          </tr>
          <tr>
            <th>Votants</th>
            {% for echeance in resultats %}
              <td>
                {{ echeance.votants|number_format(0, ',', ' ')|default('NA') }}
              </td>
            {% endfor %}
          </tr>
          <tr>
            <th>Votants/Inscrits</th>
            {% for echeance in resultats %}
              <td>
                {{ format.pourcentage(echeance.votants, echeance.inscrits) }}
              </td>
            {% endfor %}
          </tr>
          <tr>
            <th>Exprimés</th>
            {% for echeance in resultats %}
              <td>
                {{ echeance.exprimes|number_format(0, ',', ' ')|default('NA') }}
              </td>
            {% endfor %}
          </tr>
          {% if reference is not null %}
            {% set ref = resultats[reference] %}
          {% else %}
            {% set ref = null %}
          {% endif %}
          {% for nuance, score in (resultats|first)|slice(4) %}
            <tr>
              <th>
                {{ nuance }}
              </th>
              {% for echeance in resultats %}
                {% if echeance[nuance].candidats|length > 0 %}
                  <td title="Candidat-e-s" data-content="{{ format.candidat(echeance[nuance].candidats) }}">
                {% else %}
                  <td>
                {% endif %}
                  {{ echeance[nuance].score.toVoix|number_format(0, ',', ' ')|default('NA') }}
                  {% if (ref is null and loop.index > 1) or (ref is not null and echeance != ref) %}
                    {{ format.diffVoix(resultats, loop.index, nuance, ref) }}
                  {% endif %}<br/>
                  {{ format.pourcentage(echeance[nuance].score.toVoix, echeance.exprimes) }}
                  {% if (ref is null and loop.index > 1) or (ref is not null and echeance != ref) %}
                    {{ format.diffPourcentage(resultats, loop.index, nuance, ref) }}
                  {% endif %}<br/>
                  {% if echeance[nuance].sieges %}
                    {{ echeance[nuance].sieges }} sièges
                  {% endif %}
                </td>
              {% endfor %}
            </tr>
          {% endfor %}
        </table>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-md-11">
      <canvas id="chart"></canvas>
    </div>
    <div class="col-md-1" id="legend">
    </div>
  </div>
{% endblock %}

{% block javascript %}
  {% javascripts '@PartiDeGaucheElectionsBundle/Resources/public/js/Chart.min.js' %}
    <script type="text/javascript" src="{{ asset_url }}"></script>
  {% endjavascripts %}
  <script>
    // popover
    $('td').popover({
      container: 'body',
      placement: 'top',
      html: true,
      trigger: 'hover'
    });

    // chart
    var getNuanceColor = function(nuance) {
      var map = {
        EXG: "#750103",
        FG: "#DD0005",
        VEC: "#74B443",
        SOC: "#FF00BB",
        DVG: "#FF424B",
        CEN: "#FFF300",
        UMP: "#424BFF",
        DVD: "#8B88FF",
        FN: "#02005B",
        EXD: "#000000",
        AUT: "#717171"
      };

      return map[nuance];
    };

    {% for nuance, score in (resultats|first)|slice(4) %}
      $('#legend').append(
          '<span style="color: ' + getNuanceColor('{{ nuance }}') + ';">'
          + '&#11035;'
        + '</span> '
        + '<strong>{{ nuance }}</strong><br/>'
      );
    {% endfor %}

    var data = {
      labels: [
        {% for echeance, resultat in resultats %}
          '{{ echeance }}'{% if not loop.last %},{% endif %}
        {% endfor %}
      ],
      datasets: [
        {% for nuance, score in (resultats|first)|slice(4) %}
          {
            fillColor: "rgba(255,255,255,0)",
            strokeColor : getNuanceColor('{{ nuance }}'),
            pointColor : getNuanceColor('{{ nuance }}'),
            pointStrokeColor : getNuanceColor('{{ nuance }}'),
            data : [
              {% for echeance in resultats %}
                {{ echeance.exprimes ? (echeance[nuance].score.toVoix/echeance.exprimes) * 100 : 0 }}
                {% if not loop.last %},{% endif %}
              {% endfor %}
            ]
          }{% if not loop.last %},{% endif %}
        {% endfor %}
      ]
    };
    var options = {
      datasetFill : false,
      scaleStartValue: 0,
        scaleLabel : "<%=value%> %"
    }
    var ctx = document.getElementById("chart").getContext("2d");

    var width = $('#chart').parent().width();
    $('#chart').attr("width",width);
    $('#chart').attr("height", width/3);

    new Chart(ctx).Line(data, options);
    window.onresize = function(event) {
      var width = $('canvas').parent().width();
      $('canvas').attr("width", width);
      $('#chart').attr("height", width/3);
      new Chart(ctx).Line(data, options);
    };
  </script>
{% endblock %}

